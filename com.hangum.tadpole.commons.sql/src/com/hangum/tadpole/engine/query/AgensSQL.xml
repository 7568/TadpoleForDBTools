<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright (c) 2016 hangum.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the GNU Lesser Public License v2.1
  which accompanies this distribution, and is available at
  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
  
  Contributors:
      hangum - initial API and implementation
-->
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- 
	AgensGraph 의 확장을 정의합니다. 
	
	@author hangum	
 -->
<sqlMap namespace="AgensGraph_query">

<!-- 
	graph list
 -->
<select id="agensGraphPath" resultClass="com.hangum.tadpole.engine.query.dao.agens.AgensGraphPathDAO" parameterClass="java.lang.String">
	select
	    g.graphname as graphname
	    , g.nspid as nspid
	from ag_graph as g
	where 1=1   
</select>

<!-- 
	vertex and edge list
 -->
<select id="agensVertex" resultClass="com.hangum.tadpole.engine.query.dao.agens.AgensVertexDAO" parameterClass="java.lang.String">
	select
	    labname, relid, pg_get_userbyid(c.relowner), labkind, inhrelid, inhparent, inhseqno
	from ag_label AS l 
	   left join pg_class AS c ON l.relid = c.oid
	   inner join pg_inherits AS i on l.relid = i.inhrelid
	where 1=1
	  AND l.labkind='v'	
	  and c.relnamespace = (select g.nspid from ag_graph g where g.graphname = #schema_name#)  
</select>

<!-- 
	vertex and edge list
 -->
<select id="agensEdge" resultClass="com.hangum.tadpole.engine.query.dao.agens.AgensVertexDAO" parameterClass="java.lang.String">
	select
	    labname, relid, pg_get_userbyid(c.relowner), labkind, inhrelid, inhparent, inhseqno
	from ag_label AS l 
	    left join pg_class AS c ON l.relid = c.oid
	    inner join pg_inherits AS i on l.relid = i.inhrelid
	where 1=1
	  AND l.labkind='e'	
	  and c.relnamespace = (select g.nspid from ag_graph g where g.graphname = #schema_name#)  
</select>

</sqlMap>
